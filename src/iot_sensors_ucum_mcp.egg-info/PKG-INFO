Metadata-Version: 2.4
Name: iot-sensors-ucum-mcp
Version: 1.0.0
Summary: Serveur MCP pour intégration MQTT avec Claude - IoT Sensors UCUM
Author-email: Dominique Dessy <dominique@example.com>
License: MIT
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: mcp>=1.0.0
Requires-Dist: paho-mqtt>=2.0.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: asyncio-mqtt>=0.16.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Requires-Dist: coverage>=7.0.0; extra == "dev"
Dynamic: license-file

# IoT Sensors UCUM - Serveur MCP MQTT

Serveur MCP (Model Context Protocol) pour l'intégration MQTT avec Claude, spécialement conçu pour les projets IoT avec support des unités UCUM.

## Installation rapide

1. Exécuter le script d'installation :
```bash
./install.sh
```

2. Configurer le fichier .env avec vos paramètres MQTT

3. Installer Mosquitto si nécessaire :
```bash
brew install mosquitto
brew services start mosquitto
```

## Fonctionnalités

- Publication/abonnement MQTT
- Support des unités UCUM pour IoT
- Historique des messages
- Surveillance en temps réel
- Intégration Claude Desktop

## Configuration Claude Desktop

Ajouter dans votre configuration Claude Desktop :

```json
{
  "mcpServers": {
    "iot-sensors-mqtt": {
      "command": "python",
      "args": ["-m", "iot_sensors_mcp.server"],
      "cwd": "/Users/dominique/Documents/Programmation/iot-sensors-ucum",
      "env": {
        "MQTT_BROKER_HOST": "localhost",
        "MQTT_BROKER_PORT": "1883"
      }
    }
  }
}
```

## Utilisation

Une fois configuré, vous pouvez demander à Claude :

- "Publie la température 23.5°C sur le topic sensors/temperature"
- "Abonne-toi au topic sensors/humidity"
- "Montre-moi l'historique du capteur de pression"

Auteur: Dominique Dessy
