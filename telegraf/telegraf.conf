[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

# Collecte MQTT avec support UCUM - serveur externe
[[inputs.mqtt_consumer]]
  servers = ["tcp://192.168.1.15:1883"]
  topics = ["sensors/+/+"]
  data_format = "json"
  
  # Champs qui restent en string
  json_string_fields = [
    "u",      # unité UCUM
    "status"  # pour les messages de statut
  ]
  
  # Extraction des tags depuis le topic MQTT
  # Topic format: sensors/{device_id}/{sensor_type}
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "sensors/+/+"
    tags = "sensors/device_id/sensor_type"

# Processor pour renommer les champs vers format UCUM standard
[[processors.rename]]
  [[processors.rename.replace]]
    field = "v"
    dest = "value"
  [[processors.rename.replace]]
    field = "u"
    dest = "ucum_code"
  [[processors.rename.replace]]
    field = "t"
    dest = "sensor_timestamp"

# Processor pour enrichir avec métadonnées UCUM
[[processors.enum]]
  [[processors.enum.mapping]]
    tag = "ucum_code"
    dest = "si_base_unit"
    [processors.enum.mapping.value_mappings]
      "Cel" = "K"              # Celsius -> Kelvin (SI)
      "[degF]" = "K"           # Fahrenheit -> Kelvin (SI)  
      "K" = "K"                # Kelvin (déjà SI)
      "hPa" = "Pa"             # hectoPascal -> Pascal (SI)
      "kPa" = "Pa"             # kiloPascal -> Pascal (SI)
      "bar" = "Pa"             # bar -> Pascal (SI)
      "lx" = "lx"              # lux (déjà SI)
      "%" = "1"                # pourcentage -> sans dimension

# Sortie vers InfluxDB avec préservation UCUM
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "MyInitialAdminToken0=="
  organization = "iot-sensors"
  bucket = "sensor-data"
  
  # Configuration supplémentaire
  timeout = "5s"
  user_agent = "telegraf-iot-sensors-ucum"
