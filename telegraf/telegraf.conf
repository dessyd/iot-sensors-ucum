[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

# =====================================
# FORMAT 1: Mesures individuelles 
# Topic: sensors/{device_id}/{measurement}
# Payload: {"v":40.65,"u":"lx","t":"2025-08-17T16:55:29Z"}
# =====================================
[[inputs.mqtt_consumer]]
  name_override = "sensor_individual"
  servers = ["tcp://192.168.1.15:1883"]
  topics = ["sensors/+/temperature", "sensors/+/humidity", "sensors/+/pressure", "sensors/+/illuminance"]
  data_format = "json"
  
  # Champs string pour format individuel
  json_string_fields = ["u", "t"]
  
  # Extraction device_id et sensor_type depuis le topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "sensors/+/+"
    tags = "sensors/device_id/sensor_type"

# =====================================
# FORMAT 2: Messages de statut/keepalive
# Topic: sensors/{device_id}/status  
# Payload: {"st":"on","ip":"192.168.1.122","t":"2025-08-17T16:56:05Z","s":{"temp":24.04,"hum":54.45,"press":101.66,"lux":38.71}}
# =====================================
[[inputs.mqtt_consumer]]
  name_override = "sensor_status"
  servers = ["tcp://192.168.1.15:1883"]
  topics = ["sensors/+/status"]
  data_format = "json"
  
  # Champs string pour format status
  json_string_fields = ["st", "ip", "t"]
  
  # Extraction device_id depuis le topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "sensors/+/+"
    tags = "sensors/device_id/message_type"

# =====================================
# PROCESSORS - Format individuel
# =====================================

# Renommage des champs pour format individuel (v, u, t)
[[processors.rename]]
  namepass = ["sensor_individual"]
  [[processors.rename.replace]]
    field = "v"
    dest = "value"
  [[processors.rename.replace]]
    field = "u"
    dest = "ucum_code"
  [[processors.rename.replace]]
    field = "t"
    dest = "sensor_timestamp"

# Ajout des métadonnées UCUM pour mesures individuelles
[[processors.enum]]
  namepass = ["sensor_individual"]
  [[processors.enum.mapping]]
    tag = "ucum_code"
    dest = "si_base_unit"
    [processors.enum.mapping.value_mappings]
      "Cel" = "K"              # Celsius -> Kelvin (SI)
      "[degF]" = "K"           # Fahrenheit -> Kelvin (SI)  
      "K" = "K"                # Kelvin (déjà SI)
      "hPa" = "Pa"             # hectoPascal -> Pascal (SI)
      "kPa" = "Pa"             # kiloPascal -> Pascal (SI)
      "bar" = "Pa"             # bar -> Pascal (SI)
      "lx" = "lx"              # lux (déjà SI)
      "%" = "1"                # pourcentage -> sans dimension

# =====================================
# PROCESSORS - Format status/keepalive
# =====================================

# Renommage des champs pour format status
# Note: JSON {"s":{"temp":24.04}} devient automatiquement le champ "s_temp"
[[processors.rename]]
  namepass = ["sensor_status"]
  [[processors.rename.replace]]
    field = "st"
    dest = "status"
  [[processors.rename.replace]]
    field = "ip"
    dest = "ip_address"
  [[processors.rename.replace]]
    field = "t"
    dest = "status_timestamp"
  # Renommage des valeurs des capteurs (automatiquement aplaties)
  [[processors.rename.replace]]
    field = "s_temp"
    dest = "temperature_value"
  [[processors.rename.replace]]
    field = "s_hum"
    dest = "humidity_value"
  [[processors.rename.replace]]
    field = "s_press" 
    dest = "pressure_value"
  [[processors.rename.replace]]
    field = "s_lux"
    dest = "illuminance_value"

# =====================================
# SORTIE INFLUXDB
# =====================================
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "MyInitialAdminToken0=="
  organization = "iot-sensors"
  bucket = "sensor-data"
  
  # Configuration supplémentaire
  timeout = "5s"
  user_agent = "telegraf-iot-sensors-ucum-multiformat"
