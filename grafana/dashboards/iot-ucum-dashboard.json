{
  "id": null,
  "title": "IoT Sensors - Conforme UCUM",
  "tags": ["iot", "ucum", "standards", "arduino", "mkr1010"],
  "timezone": "browser",
  "panels": [
    {
      "id": 1,
      "title": "Température (UCUM: Cel)",
      "type": "timeseries",
      "targets": [
        {
          "query": "from(bucket: \"sensor-data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\n  |> filter(fn: (r) => r.ucum_code == \"Cel\")\n  |> filter(fn: (r) => r._field == \"value\")",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "celsius",
          "displayName": "${__field.labels.device_id} - ${__field.labels.sensor_type}",
          "color": {
            "mode": "palette-classic"
          }
        }
      },
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "values": ["min", "max", "mean", "last"]
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 0
      }
    },
    {
      "id": 2,
      "title": "Humidité (UCUM: %)",
      "type": "timeseries",
      "targets": [
        {
          "query": "from(bucket: \"sensor-data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\n  |> filter(fn: (r) => r.ucum_code == \"%\")\n  |> filter(fn: (r) => r._field == \"value\")",
          "refId": "B"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "percent",
          "min": 0,
          "max": 100,
          "displayName": "${__field.labels.device_id} - ${__field.labels.sensor_type}"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 0
      }
    },
    {
      "id": 3,
      "title": "Pression (UCUM: hPa)",
      "type": "timeseries",
      "targets": [
        {
          "query": "from(bucket: \"sensor-data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\n  |> filter(fn: (r) => r.ucum_code == \"hPa\")\n  |> filter(fn: (r) => r._field == \"value\")",
          "refId": "C"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "pressurehpa",
          "displayName": "${__field.labels.device_id} - ${__field.labels.sensor_type}"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 8
      }
    },
    {
      "id": 4,
      "title": "Illuminance (UCUM: lx)",
      "type": "timeseries",
      "targets": [
        {
          "query": "from(bucket: \"sensor-data\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\n  |> filter(fn: (r) => r.ucum_code == \"lx\")\n  |> filter(fn: (r) => r._field == \"value\")",
          "refId": "D"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "lux",
          "min": 0,
          "displayName": "${__field.labels.device_id} - ${__field.labels.sensor_type}"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 8
      }
    },
    {
      "id": 5,
      "title": "Table des capteurs actifs",
      "type": "table",
      "targets": [
        {
          "query": "from(bucket: \"sensor-data\")\n  |> range(start: -1h)\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\n  |> filter(fn: (r) => r._field == \"value\")\n  |> group(columns: [\"sensor_type\", \"ucum_code\", \"device_id\"])\n  |> last()\n  |> keep(columns: [\"device_id\", \"sensor_type\", \"ucum_code\", \"_value\", \"_time\"])",
          "refId": "E"
        }
      ],
      "transformations": [
        {
          "id": "organize",
          "options": {
            "renameByName": {
              "device_id": "Device ID",
              "sensor_type": "Capteur",
              "ucum_code": "Code UCUM",
              "_value": "Dernière valeur",
              "_time": "Dernière mesure"
            }
          }
        }
      ],
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 16
      }
    }
  ],
  "templating": {
    "list": [
      {
        "name": "device",
        "type": "query",
        "query": "from(bucket: \"sensor-data\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\n  |> keep(columns: [\"device_id\"])\n  |> distinct(column: \"device_id\")",
        "multi": true,
        "includeAll": true,
        "current": {
          "selected": true,
          "text": "All",
          "value": "$__all"
        }
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "refresh": "30s"
}
